# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ2
# üìå –î–æ—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–¥–∞—á—É 1.
# üìå –ü—Ä–µ–≤—Ä–∞—Ç–∏—Ç–µ –≤–Ω–µ—à–Ω—é—é —Ñ—É–Ω–∫—Ü–∏—é –≤ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä.
# üìå –û–Ω –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–≤–µ—Ä—è—Ç—å –≤—Ö–æ–¥—è—Ç –ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –≤ —Ñ—É–Ω–∫—Ü–∏—é—É–≥–∞–¥–∞–π–∫—É —á–∏—Å–ª–∞ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω—ã [1, 100] –∏ [1, 10].
# üìå –ï—Å–ª–∏ –Ω–µ –≤—Ö–æ–¥—è—Ç, –≤—ã–∑—ã–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —Å–æ —Å–ª—É—á–∞–π–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏ –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤.


#from typing import Callable
from random import randint
__all__ = ['guess_game','guess_num']


def guess_num (func):
    NUM_MIN = 1
    NUM_MAX = 100
    COUNT_MIN = 1
    COUNT_MAX = 10
    def wrapper (num: int, count: int):
        if num < NUM_MIN or num > NUM_MAX:
            num = randint(NUM_MIN, NUM_MAX)
        if count < COUNT_MIN or count > COUNT_MAX:
            count = randint(COUNT_MIN, COUNT_MAX)
        return func(num, count)
    return wrapper


@guess_num
def guess_game (num: int, count: int) -> None:
    for i in range(1, count+1):
        print(f'–ü–æ–ø—ã—Ç–∫–∞ {i} –∏–∑ {count}', end=' ')
        user_input_number = int(input("–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≥–∞–¥–∫—É: "))
        if user_input_number == num:
            print(f'–í—ã —É–≥–∞–¥–∞–ª–∏. –ë—ã–ª–æ –∑–∞–≥–∞–¥–æ —á–∏—Å–ª–æ {num}.')
            return 
    print(f'–í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã. –í—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏.')


if __name__ == '__main__':
    count = int(input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ —É–≥–∞–¥—ã–≤–∞–Ω–∏—è –æ—Ç 1 –¥–æ 10: "))
    number = int(input("–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–∞–¥—ã–≤–∞–µ–º–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100: "))
    guess_game(number, count)