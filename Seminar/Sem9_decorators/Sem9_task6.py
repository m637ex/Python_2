# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ6
# üìå –î–æ—Ä–∞–±–æ—Ç–∞–π—Ç–µ –ø—Ä–æ—à–ª—É—é –∑–∞–¥–∞—á—É –¥–æ–±–∞–≤–∏–≤ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä wraps –≤ –∫–∞–∂–¥—ã–π –∏–∑ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤.

from random import randint
from os import chdir
from pathlib import Path
from typing import Callable
from functools import wraps
import json
__all__ = ['guess_game','save_to_json']
chdir(fr'g:\YandexDisk\GB\Python\Python_2\Seminar\Sem9_decorators')


def save_to_json(func: Callable):
    '''Read arguments from json file'''
    list_of_dicts = []  #
    file = Path(f'{func.__name__}.json')
    if file.is_file():
        with open(file, mode='r', encoding="UTF-8") as f:
            list_of_dicts = json.load(f)
    @wraps(func)
    def get_arg(*args, **kwargs):
        '''Get arguments from func and export them to json file'''
        json_dict = {'args': args, **kwargs}    # —Å–æ—Ö—Ä–∞—è–Ω–µ–º –≤ –∏—Ç–æ–≥–æ–≤—ã–π —Å–ª–æ–≤–∞—Ä—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        result = func(*args, **kwargs)          # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏
        json_dict['result'] = result
        list_of_dicts.append(json_dict)               
        print(f"–ü–æ–ª—É—á–µ–Ω—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: {args = }, {kwargs = }, {json_dict = }")
        with open(file, mode='w', encoding="UTF-8") as f:
            json.dump(list_of_dicts, f)
        #return func(*args, **kwargs)
    return get_arg 

def number_of_launches(count:int):      # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
    def start_function(func: Callable): # –§—É–Ω–∫—Ü–∏—è
        @wraps(func)
        def start(*args, **kwargs):     # –ê—Ä–≥—É–º–µ–Ω—Ç—ã
            for i in range(count):
                func(*args, **kwargs)
        return start
    return start_function


def check_arg(func: Callable):
    NUM_MIN = 1
    NUM_MAX = 100
    COUNT_MIN = 1
    COUNT_MAX = 10
    @wraps(func)
    def wrapper (num: int, count: int):
        if num < NUM_MIN or num > NUM_MAX:
            num = randint(NUM_MIN, NUM_MAX)
        if count < COUNT_MIN or count > COUNT_MAX:
            count = randint(COUNT_MIN, COUNT_MAX)
        return func(num, count)
    return wrapper
    
@number_of_launches(3)
@check_arg
@save_to_json
def guess_game (num: int, count: int):
    '''–ò–≥—Ä–∞ —Å —É–≥–∞–¥—ã–≤–∞–µ–Ω–∏–µ–º —á–∏—Å–ª–∞'''
    for i in range(1, count+1):
        print(f'–ü–æ–ø—ã—Ç–∫–∞ {i} –∏–∑ {count}', end=' ')
        user_input_number = int(input("–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≥–∞–¥–∫—É: "))
        if user_input_number == num:
            print(f'–í—ã —É–≥–∞–¥–∞–ª–∏. –ë—ã–ª–æ –∑–∞–≥–∞–¥–æ —á–∏—Å–ª–æ {num}.')
            return True
    else:
        print(f'–í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã. –í—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏.')
        return False


if __name__ == '__main__':
    print(help(guess_game))
    count = int(input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ —É–≥–∞–¥—ã–≤–∞–Ω–∏—è –æ—Ç 1 –¥–æ 10: "))
    number = int(input("–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–∞–¥—ã–≤–∞–µ–º–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100: "))
    guess_game(number, count)