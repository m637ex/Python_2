# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ2
# üìå –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–º —Ü–∏–∫–ª–µ–∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∏–º—è, –ª–∏—á–Ω—ã–π 
# –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏ —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ (–æ—Ç 1 –¥–æ 7).
# üìå –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –≤–≤–æ–¥–∞ –¥–æ–±–∞–≤–ª—è–π—Ç–µ –Ω–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ JSON —Ñ–∞–π–ª.
# üìå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≥—Ä—É–ø–ø–∏—Ä—É—é—Ç—Å—è –ø–æ —É—Ä–æ–≤–Ω—é –¥–æ—Å—Ç—É–ø–∞.
# üìå –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã—Å—Ç—É–ø–∞–µ—Ç –∫–ª—é—á—ë–º –¥–ª—è –∏–º–µ–Ω–∏.
# üìå –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã —É–Ω–∏–∫–∞–ª—å–Ω—ã –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞.
# üìå –ü—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É–∂–µ –∑–∞–ø–∏—Å–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª –¥–∞–Ω–Ω—ã–µ –¥–æ–ª–∂–Ω—ã —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è.


from pathlib import Path
import json
__all__ = ['set_users']

level_max = 7

def set_users(user_file: Path) -> None:
    unique_id = set()
    if not user_file.is_file(): # –µ—Å–ª–∏ —Ñ–∞–π–ª –µ—Å—Ç—å —Ç–æ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –µ–≥–æ
        data = {str(i):{} for i in range(1, level_max+1)} # –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø—É—Å—Ç–æ–≥–æ —Å–ª–æ–≤–∞—Ä—è 
    else:
        with open(user_file, mode='r', encoding="UTF-8") as file:
            data = json.load(file)  # –∑–∞–≥—Ä—É–∑–∏–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞
            for dict_level in data.values():
                unique_id.update(dict_level)
                print(f"{unique_id}")                
    while True:    
        name = input("–í–≤–µ–¥–∏—Ç–µ Name:")
        if not name:    # –≤—ã—Ö–æ–¥ –∏–∑ —Ü–∏–∫–ª–∞
            break
        user_id = input("–í–≤–µ–¥–∏—Ç–µ ID:")
        level = input("–í–≤–µ–¥–∏—Ç–µ Level –æ—Ç 1 –¥–æ 7:")
        while level not in (str(i) for i in range(1, level_max+1)):
            print("–Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥")            
            level = input("–í–≤–µ–¥–∏—Ç–µ Level –æ—Ç 1 –¥–æ 7:")
        if user_id not in unique_id:
            data[level][user_id] = name # –∏–ª–∏  data[level].update({user_id: name})
            unique_id.add(user_id)
            with open(user_file, mode='w', encoding='utf-8') as file:
                json.dump(data, file, ensure_ascii=False, indent=4) # indent - –æ—Ç—Å—Ç—É–ø



if __name__ == '__main__':
    # work_directory = r'G:\YandexDisk\GB\Python\Python_2\Seminar\Sem8_serial_deserial'
    # in_file = r'G:\YandexDisk\GB\Python\Python_2\Seminar\Sem7_files\task3_result.txt'
    out_file = r'G:\YandexDisk\GB\Python\Python_2\Seminar\Sem8_serial_deserial\task2_users.json'
    set_users(Path(out_file))